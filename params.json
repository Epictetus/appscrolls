{"name":"App Scrolls","body":"# The App Scrolls for creating and transforming Rails apps\r\n\r\n```\r\n   ______   __           ____             ____  \r\n  / __/ /__/ /__ _____  / __/__________  / / /__\r\n / _// / _  / _ `/ __/ _\\ \\/ __/ __/ _ \\/ / (_-<\r\n/___/_/\\_,_/\\_,_/_/   /___/\\__/_/  \\___/_/_/___/\r\n```\r\n\r\nThe App Scrolls is a magical tool to generate new Rails and modify existing Rails applications (coming) to include your favourite, powerful magic. Authentication, testing, persistence, javascript, css, deployment, and templating - there's a magical scroll for you.\r\n\r\n* Follow on twitter [@appscrolls][9]\r\n\r\nAn example application that was built by the App Scrolls is at [https://github.com/drnic/mydemoapp][14]. The generated README shows all the scrolls that were included.\r\n\r\n## Installation\r\n\r\nInstallation is simple:\r\n\r\n    gem install appscrolls\r\n\r\n## Usage\r\n\r\nThe primary usage of the `appscrolls` gem is to utilize its interactive terminal command to build a new Rails application. To get started, you can simply run the command thusly:\r\n\r\n    eldar new APP_NAME\r\n    appscrolls new APP_NAME\r\n\r\nWhere `APP_NAME` is the directory in which you wish to create the app (it mirrors the Rails creation syntax). You will then be guided through the scroll selection process and subsequently the Rails app generator will automatically run with the template and all appropriate command line options included.\r\n\r\nTo transform an existing Rails app, you ... wait, that's not implemented yet. But since the \"apply template\" feature of `rails new APP_NAME -m template.rb` is implemented in Thor, I mean, how hard could it be?*\r\n\r\n### Specifying Scrolls\r\n\r\nIf you wish to skip the interactive scroll selector, you may provide instead a list of scrolls with the `-s` or `--scrolls` option:\r\n\r\n    eldar new APP_NAME -s twitter_bootstrap mysql resque\r\n    eldar new APP_NAME --scrolls postgresql github eycloud\r\n\r\nThis will automatically generate a Rails template with the provided scrolls and begin the app generator.\r\n\r\n### Listing Scrolls\r\n\r\nYou can also print out a simple list of scrolls:\r\n\r\n    eldar list\r\n\r\nOr print out a list of scrolls for a specific category:\r\n\r\n    eldar list persistence\r\n\r\n## Deployment Support\r\n\r\nWeb applications are boring if they aren't running proudly on the internet. The App Scrolls make this automatic for your favourite providers!\r\n\r\n### Engine Yard\r\n\r\nScroll: `eycloud`\r\n\r\nIf you choose the `eycloud` scroll, your application will be automatically deployed to [Engine Yard Cloud][6]. Your code will also be automatically stored on a private/public GitHub repository.\r\n\r\nThe `eycloud` scroll magically transforms many other scrolls to work specifically for [Engine Yard Cloud][6]. For example:\r\n\r\n* `postgresql` - the environment will have PostgreSQL selected instead of MySQL\r\n* `resque` - the environment will have Resque and Redis\r\n\r\n### Heroku\r\n\r\nThe App Scrolls needs a Heroku Master to support Heroku for the App Scrolls. \r\n\r\nThere is some initial work in the [current scrolls][11] and the [archived/unsupported scrolls][12]\r\n\r\n### CloudFoundry\r\n\r\nThe App Scrolls needs a CloudFoundry Master to support CloudFoundry for the App Scrolls. \r\n\r\n## Authoring Scrolls of Magical Mystery\r\n\r\nCreate new scrolls using:\r\n\r\n    rake new NAME=scroll-name\r\n\r\nSubmitting a scroll is actually a very straightforward process. Scrolls are made of up **template code** and **YAML back-matter** stored in a ruby file. The `__END__` parsing convention is used so that each scroll is actually a valid, parseable Ruby file. The structure of a scroll looks something like this:\r\n\r\n```ruby\r\ngem 'supergem'\r\n\r\nafter_bundler do\r\n  generate \"supergem:install\"\r\nend\r\n\r\n__END__\r\n\r\ncategory: templating\r\nname: SuperGem\r\ndescription: Installs SuperGem which is useful for things\r\nauthor: mbleigh\r\n```\r\n\r\nIt's really that simple. The gem has RSpec tests that automatically validate each scroll in the repository, so you should run `rake spec` as a basic sanity check before submitting a pull request. Note that these don't verify that your scroll code itself works, just that App Scrolls could properly parse and understand your scroll file.\r\n\r\n## History\r\n\r\nThis project is an old fashioned fork of [Michael Bleigh][5]'s [Rails Wizard][4]. A new name, new project, and new purpose. \r\n\r\nThis project wouldn't exist without Michael having created [Rails Wizard][4] during Rails Rumble and maintaining and upgrading it for a long time. Sadly support dropped off, several recipes did not work with Rails 3.1+, \r\n\r\n[Dr Nic][7] originally worked on [Rails Wizard][4] to provide [Engine Yard Cloud][6] support, his employer and his favourite hosting platform. He also merged in a lot of recipes from other forks, and added new recipes for modern projects.\r\n\r\nSupport for Engine Yard Cloud meant integration with Chef Recipes. This meant confusing language - Rails Wizard Recipes and Chef Recipes. He decided that wizards don't use recipes - they use scrolls. Alchemists use recipes. And screw alchemists and their dinky potions. Recipes became Scrolls.\r\n\r\n\"App Scrolls\" is a deliberate misspelling of the popular [Elder Scrolls][8] computer game. Ok, it was accidental but \"appscrolls\" and \"appscrolls\" should now be much easier to search for on Twitter and Google; and [@appscrolls][9] [appscrolls.org][1] were available\r\n\r\n## Future\r\n\r\n* Automatically setup Continuous Integration for new applications - branches \"jenkins\"\r\n* Interactive mode is a wizard by categories \"pick A, B, C or none\"\r\n* Apply scrolls to existing Rails applications - branch \"[apply_scrolls][13]\"*\r\n* Scrolls work or fail fast on Heroku\r\n* Scrolls work or fail fast on CloudFoundry\r\n* Scrolls generate their own README - branch \"readmes\"\r\n* 3rd party services/add-ons enabled within deployment platform or directly with service\r\n* Padrino / Sinatra applications\r\n* Non-Ruby applications (Lithium for PHP, etc)\r\n\r\nMissing scrolls\r\n\r\n* MongoDB - branch \"mongodb\"\r\n* OmniAuth - branch \"omniauth\"\r\n* Sidekiq - branch \"sidekiq\"\r\n\r\nHow hard could it be?\r\n\r\n* `*` 'How hard could it be to transform applications?' - pretty hard. Scrolls need to be aware of the current code base, rather than merely the list of other scrolls being used to create a new app. Scrolls also need to know about versions of Rails rather than just latest rails.\r\n\r\n## Thanks\r\n\r\nASCII banner - http://www.network-science.de/ascii/ using 'smslant' font.\r\n\r\n## License\r\n\r\nApp Scrolls and its scrolls are distributed under the MIT License. See [MIT_LICENSE][10] for the actual words.\r\n\r\n[1]:http://appscrolls.org/\r\n[2]:https://github.com/drnic/appscrolls\r\n[2]:https://github.com/drnic/appscrolls/tree/master/scrolls\r\n[4]:https://github.com/intridea/rails_wizard\r\n[5]:https://github.com/mbleigh\r\n[6]:http://www.engineyard.com/products/cloud\r\n[7]:http://drnicwilliams.com\r\n[8]:http://www.elderscrolls.com/\r\n[9]:https://twitter.com/elderscrolls\r\n[10]:https://github.com/drnic/appscrolls/blob/master/MIT_LICENSE\r\n[11]:https://github.com/drnic/appscrolls/tree/master/scrolls\r\n[12]:https://github.com/drnic/appscrolls/tree/master/scrolls/zzz\r\n[13]:https://github.com/drnic/appscrolls/tree/apply_scrolls\r\n[14]:https://github.com/drnic/mydemoapp","tagline":"The App Scrolls is a magical tool to generate new Rails and modify existing Rails applications (coming) to include your favourite, powerful magic. ","google":"UA-764576-29","note":"Don't delete this file! It's used internally to help with page regeneration."}